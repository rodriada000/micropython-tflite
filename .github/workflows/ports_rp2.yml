name: rp2 port

on:
  push:
  pull_request:
    paths:
      - '.github/workflows/*.yml'
      - 'tools/**'
      - 'py/**'
      - 'extmod/**'
      - 'shared/**'
      - 'lib/**'
      - 'drivers/**'
      - 'ports/rp2/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install packages
      run: source tools/ci.sh && ci_rp2_setup

    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        git submodule update --init --recursive
        pip3 install Pillow
        pip3 install numpy

    # - name: Install Arm tools
    #   uses: ARM-software/cmsis-actions/vcpkg@v1
    #   with: 
    #     config: "./tflite-micro/tensorflow/lite/micro/tools/github/arm/vcpkg-configuration.json"

    # - name: Activate Arm tool license
    #   uses: ARM-software/cmsis-actions/armlm@v1
    - name: list files
      run: |
        ls -la ./
      continue-on-error: true
              
    - name: Setup Build for Tensorflow
      run: |
        echo "Regenerating tfm directory"
        rm -rf ./user-modules/microlite/tflm

        cd ./tflite-micro
        chmod +x ../user-modules/microlite/prepare-tflm-rp2.sh
        ../user-modules/microlite/prepare-tflm-rp2.sh

        cd ./
        rm user-modules/microlite/tflm/tensorflow/*/hexdump_test.cpp

    - name: list files
      run: |
        ls -la ./
        ls -la ./user-modules/microlite/tflm/third_party/cmsis_nn/Source/*
      continue-on-error: true
    - name: Build
      run: source tools/ci.sh && ci_rp2_build

    - name: Archive PICO firmware
      uses: actions/upload-artifact@v4
      with:
        name: microlite-rp2-pico-firmware
        path: |
          ./ports/rp2/*/firmware.uf2
